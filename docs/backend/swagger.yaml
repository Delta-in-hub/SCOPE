definitions:
  internal_backend.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  internal_backend.LoginResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
    type: object
  internal_backend.LogoutRequest:
    properties:
      refresh_token:
        type: string
    type: object
  internal_backend.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    type: object
  internal_backend.RefreshTokenResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
    type: object
  internal_backend.RegisterRequest:
    properties:
      display_name:
        type: string
      email:
        type: string
      password:
        type: string
    required:
    - display_name
    - email
    - password
    type: object
  internal_backend.RegisterResponse:
    properties:
      display_name:
        type: string
      email:
        type: string
      user_id:
        type: string
    type: object
  scope_internal_models.NodeInfo:
    properties:
      id:
        description: Unique identifier for the agent (machine ID)
        type: string
      ips:
        additionalProperties:
          type: string
        description: IP addresses of the agent (interface name -> IP)
        type: object
      last_seen:
        description: Last time the agent was seen
        type: string
      latency:
        allOf:
        - $ref: '#/definitions/time.Duration'
        description: Latency of the agent
      status:
        description: Status of the agent (online, offline)
        type: string
      token:
        description: Authentication token
        type: string
    required:
    - id
    - ips
    - status
    type: object
  time.Duration:
    enum:
    - -9223372036854775808
    - 9223372036854775807
    - 1
    - 1000
    - 1000000
    - 1000000000
    - 60000000000
    - 3600000000000
    - -9223372036854775808
    - 9223372036854775807
    - 1
    - 1000
    - 1000000
    - 1000000000
    - 60000000000
    - 3600000000000
    type: integer
    x-enum-varnames:
    - minDuration
    - maxDuration
    - Nanosecond
    - Microsecond
    - Millisecond
    - Second
    - Minute
    - Hour
    - minDuration
    - maxDuration
    - Nanosecond
    - Microsecond
    - Millisecond
    - Second
    - Minute
    - Hour
host: 127.0.0.1:18080
info:
  contact:
    email: DeltaMail@qq.com
    name: Delta
    url: https://github.com/Delta-in-hub/ebpf-golang
  description: Scope Center Backend API
  termsOfService: http://swagger.io/terms/
  title: Scope Center Backend API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns access and refresh tokens
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_backend.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_backend.LoginResponse'
        "400":
          description: Invalid request body
          schema:
            type: string
        "401":
          description: Invalid credentials
          schema:
            type: string
        "500":
          description: Login failed
          schema:
            type: string
      summary: User login
      tags:
      - auth
  /api/v1/auth/logout:
    post:
      consumes:
      - application/json
      description: Invalidates the user's refresh token
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_backend.LogoutRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid request body or empty refresh token
          schema:
            type: string
        "500":
          description: Logout failed
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: User logout
      tags:
      - auth
  /api/v1/auth/refreshToken:
    post:
      consumes:
      - application/json
      description: Uses a refresh token to generate a new access token
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_backend.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_backend.RefreshTokenResponse'
        "400":
          description: Invalid request body or empty refresh token
          schema:
            type: string
        "401":
          description: Refresh token failed
          schema:
            type: string
      summary: Refresh access token
      tags:
      - auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Registers a new user and returns user information
      parameters:
      - description: Registration information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_backend.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_backend.RegisterResponse'
        "400":
          description: Invalid request body
          schema:
            type: string
        "409":
          description: Email already exists
          schema:
            type: string
        "500":
          description: Registration failed
          schema:
            type: string
      summary: User registration
      tags:
      - auth
  /api/v1/node/down:
    post:
      consumes:
      - application/json
      description: Updates a node's status to offline
      parameters:
      - description: Node information
        in: body
        name: node
        required: true
        schema:
          $ref: '#/definitions/scope_internal_models.NodeInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request body, incomplete node information, node doesn't
            exist, or token mismatch
          schema:
            type: string
        "500":
          description: Failed to update node
          schema:
            type: string
      summary: Register node as offline
      tags:
      - node
  /api/v1/node/list:
    get:
      consumes:
      - application/json
      description: Returns a list of all registered nodes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/scope_internal_models.NodeInfo'
            type: array
        "500":
          description: Failed to get node list
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get all nodes
      tags:
      - node
  /api/v1/node/up:
    post:
      consumes:
      - application/json
      description: Updates a node's status to online and returns a token
      parameters:
      - description: Node information
        in: body
        name: node
        required: true
        schema:
          $ref: '#/definitions/scope_internal_models.NodeInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Returns token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request body or incomplete node information
          schema:
            type: string
        "500":
          description: Failed to update node
          schema:
            type: string
      summary: Register node as online
      tags:
      - node
swagger: "2.0"
